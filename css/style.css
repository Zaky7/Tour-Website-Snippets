/*Table OF Contents
------------------------------------
1 GENERAL
------ 1.1  Typography
------ 1.2  Resetting
2 HEADER
----2.1 Logo
----2.2 text-box
    2.3 heading-primary
      2.3.1 heading-primary-main
      2.3.2 heading-primary-sub
      2.3.3 btn btn-white btn-animated
------------------------------------*/

/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/


/*=========================================================
  RESETTING 
===========================================================*/

/* Resetting the Margins and Padding using universal Selector */
 * {
   margin: 0px;
   padding: 0px;
   box-sizing: border-box;
 }

/* We are inheriting the Fonts of the Html Element */
 body {
     font-family: "Lato";
     font-weight: 400;
     font-size: 16px;
     line-height: 1.7;
     color: #777;
     padding: 30px;
 }





/*=========================================================
  >2  HEADER
===========================================================*/

 header {
   height: 95vh;
   background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
   background-size: cover;
   background-position: top;
   clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
   position: relative;
 }


 /*----------------------------*\
  >2.1 Logo
\*----------------------------*/

 /* 
    Header is the parent Element which serves as a reference to the child logo Element
    therefore the header has position relative
*/
 .logo-box {
    position: absolute;
    top: 40px;
    left: 40px
 }

/* We need to figure out either height or width other would be figured out by browser */
 .logo {
   height: 35px;
 }


 /*----------------------------*\
  >2.2 text-box
\*----------------------------*/

 /* Text box Wrapper */
 .text-box {
   position: absolute;
   left: 50%;
   top: 50%;
   transform: translate(-50%, -50%);
   text-align: center;
 }

  /*----------------------------*\
  >2.3 heading-primary
\*----------------------------*/


 .heading-primary {
   text-transform: uppercase;
   color: #fff;

   /* Removing shakyness in css animations of header */
   backface-visibility: hidden;
   margin-bottom: 35px;
 }

/*----------------------------*\
  >2.3.1 heading-primary-main
\*----------------------------*/

 .heading-primary-main {
     display: block;
     font-size: 80px;
     font-weight: 400;
     letter-spacing: 25px;
     animation-name: moveInLeft;
     animation-duration: 1s;
     animation-timing-function: ease-out;
     /* 
     animation-iteration-count: 2;
     animation-delay: 2s; 
     */

 }

/*----------------------------*\
  >2.3.2 heading-primary-sub
\*----------------------------*/

 .heading-primary-sub {
    display: block;
    font-size: 24px;
    font-weight: 700;
    letter-spacing: 9.3px;
    /* animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
    animation: moveInRight 1s ease-out;
 }

/*
   Animations for the header

   Transform property of css is used for the transformation of Content
   TranslateX is the x-directions ---x> -x move to left and +x move to right\
   Keyframs specifies the animation code
*/

@keyframes moveInLeft {
    /* Start of Animations */
    0% {
       opacity: 0;
       transform: translateX(-100px);
    }

    80% {
      transform: translateX(10px);
    }

    100% {
      opacity: 1;
      transform: translateX(0);
    }
}

@keyframes moveInRight {
    
  /* Start of Animations */

  0% {
     opacity: 0;
     transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}


@keyframes moveInButtom {
  0% {
     opacity: 0;
     transform: translateY(100px);
  }

  70% {
    opacity: 1;
    transform: translateY(-25px);
  }

  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}


/*----------------------------*\
  >2.3.3 btn btn-white
\*----------------------------*/


/* 
   PseudoClasses are the state of the Element
   When you use hover it determines the state
 */

.btn:link, 
.btn:visited {
   text-transform: uppercase;
   text-decoration: none;
   padding: 15px 40px;
   display: inline-block;
   transition: all .2s;
   /* see Comment below for explation */
   position: relative;
}

.btn-white {
  background-color: #fff;
  color: #777;
  border-radius: 28px;
}

/*
    Animations for the Button

    Negative Value moving up and positive value moving down
    Y axis move from top to Bottom.
 */

.btn:hover {
  transform: translateY(-3px);

  /* X, Y, blurr, color   We reduce the show in active state*/
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2)
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2)
}


/* 
 We create a pseudo Element which appears behind the Button Element when we hover over it 
 It appears like the child of the Element
*/

/* We need to specify the content and display otherwise it won't work */

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0px;
  left: 0px;
  /* Hight value of border radius automatically set the Radius */
  border-radius: 100px;
  z-index: -1;
  transition: all .4s;
}
 
.btn-white::after {
  background-color: #fff;
}

/* 
  We make position of btn as absolute so that it can have properties relative to the parent element. Since next parent is h1. Its properties are coresponding to the h1. Therefore in order to make its properties corresponding to btn we make it postion: relative
*/


/* It will transform the after element when we hover over the Button */

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInButtom .5 ease-out 1.35s;
  animation-fill-mode: backwards;
}



